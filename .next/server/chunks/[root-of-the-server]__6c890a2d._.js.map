{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/image-storage.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { Image } from '@/types/image';\n\nconst UPLOAD_DIR = path.join(process.cwd(), 'public', 'uploads');\nconst METADATA_FILE = path.join(process.cwd(), 'public', 'uploads', 'metadata.json');\n\n// Ensure upload directory exists\nif (!fs.existsSync(UPLOAD_DIR)) {\n  fs.mkdirSync(UPLOAD_DIR, { recursive: true });\n}\n\n// Ensure metadata file exists\nif (!fs.existsSync(METADATA_FILE)) {\n  fs.writeFileSync(METADATA_FILE, JSON.stringify([]));\n}\n\nexport function getImages(): Image[] {\n  try {\n    const data = fs.readFileSync(METADATA_FILE, 'utf-8');\n    return JSON.parse(data) as Image[];\n  } catch (error) {\n    console.error('Error reading images:', error);\n    return [];\n  }\n}\n\nexport function saveImage(image: Image): void {\n  const images = getImages();\n  images.push(image);\n  fs.writeFileSync(METADATA_FILE, JSON.stringify(images, null, 2));\n}\n\nexport function deleteImage(id: string): boolean {\n  const images = getImages();\n  const imageIndex = images.findIndex(img => img.id === id);\n  \n  if (imageIndex === -1) return false;\n  \n  const image = images[imageIndex];\n  const filePath = path.join(UPLOAD_DIR, image.filename);\n  \n  // Delete file\n  if (fs.existsSync(filePath)) {\n    fs.unlinkSync(filePath);\n  }\n  \n  // Update metadata\n  images.splice(imageIndex, 1);\n  fs.writeFileSync(METADATA_FILE, JSON.stringify(images, null, 2));\n  \n  return true;\n}\n\nexport function addComment(imageId: string, comment: any): boolean {\n  const images = getImages();\n  const imageIndex = images.findIndex(img => img.id === imageId);\n  \n  if (imageIndex === -1) return false;\n  \n  images[imageIndex].comments.push(comment);\n  fs.writeFileSync(METADATA_FILE, JSON.stringify(images, null, 2));\n  \n  return true;\n}\n\nexport function deleteComment(imageId: string, commentId: string): boolean {\n  const images = getImages();\n  const imageIndex = images.findIndex(img => img.id === imageId);\n  \n  if (imageIndex === -1) return false;\n  \n  const image = images[imageIndex];\n  const commentIndex = image.comments.findIndex(c => c.id === commentId);\n  \n  if (commentIndex === -1) return false;\n  \n  image.comments.splice(commentIndex, 1);\n  fs.writeFileSync(METADATA_FILE, JSON.stringify(images, null, 2));\n  \n  return true;\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;AAGA,MAAM,aAAa,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU;AACtD,MAAM,gBAAgB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,WAAW;AAEpE,iCAAiC;AACjC,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,aAAa;IAC9B,6FAAA,CAAA,UAAE,CAAC,SAAS,CAAC,YAAY;QAAE,WAAW;IAAK;AAC7C;AAEA,8BAA8B;AAC9B,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,gBAAgB;IACjC,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,EAAE;AACnD;AAEO,SAAS;IACd,IAAI;QACF,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,eAAe;QAC5C,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,EAAE;IACX;AACF;AAEO,SAAS,UAAU,KAAY;IACpC,MAAM,SAAS;IACf,OAAO,IAAI,CAAC;IACZ,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,QAAQ,MAAM;AAC/D;AAEO,SAAS,YAAY,EAAU;IACpC,MAAM,SAAS;IACf,MAAM,aAAa,OAAO,SAAS,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;IAEtD,IAAI,eAAe,CAAC,GAAG,OAAO;IAE9B,MAAM,QAAQ,MAAM,CAAC,WAAW;IAChC,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,YAAY,MAAM,QAAQ;IAErD,cAAc;IACd,IAAI,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW;QAC3B,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC;IAChB;IAEA,kBAAkB;IAClB,OAAO,MAAM,CAAC,YAAY;IAC1B,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,QAAQ,MAAM;IAE7D,OAAO;AACT;AAEO,SAAS,WAAW,OAAe,EAAE,OAAY;IACtD,MAAM,SAAS;IACf,MAAM,aAAa,OAAO,SAAS,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;IAEtD,IAAI,eAAe,CAAC,GAAG,OAAO;IAE9B,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;IACjC,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,QAAQ,MAAM;IAE7D,OAAO;AACT;AAEO,SAAS,cAAc,OAAe,EAAE,SAAiB;IAC9D,MAAM,SAAS;IACf,MAAM,aAAa,OAAO,SAAS,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;IAEtD,IAAI,eAAe,CAAC,GAAG,OAAO;IAE9B,MAAM,QAAQ,MAAM,CAAC,WAAW;IAChC,MAAM,eAAe,MAAM,QAAQ,CAAC,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IAE5D,IAAI,iBAAiB,CAAC,GAAG,OAAO;IAEhC,MAAM,QAAQ,CAAC,MAAM,CAAC,cAAc;IACpC,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,QAAQ,MAAM;IAE7D,OAAO;AACT","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/images/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getImages, deleteImage } from '@/lib/image-storage';\n\nexport async function GET() {\n  try {\n    const images = getImages();\n    return NextResponse.json({ images });\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    return NextResponse.json({ error: 'Failed to fetch images' }, { status: 500 });\n  }\n}\n\nexport async function DELETE(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const id = searchParams.get('id');\n\n    if (!id) {\n      return NextResponse.json({ error: 'Image ID is required' }, { status: 400 });\n    }\n\n    const success = deleteImage(id);\n\n    if (!success) {\n      return NextResponse.json({ error: 'Image not found' }, { status: 404 });\n    }\n\n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error deleting image:', error);\n    return NextResponse.json({ error: 'Failed to delete image' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,CAAA,GAAA,gIAAA,CAAA,YAAS,AAAD;QACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAO;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;AAEO,eAAe,OAAO,OAAoB;IAC/C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,KAAK,aAAa,GAAG,CAAC;QAE5B,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAuB,GAAG;gBAAE,QAAQ;YAAI;QAC5E;QAEA,MAAM,UAAU,CAAA,GAAA,gIAAA,CAAA,cAAW,AAAD,EAAE;QAE5B,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAkB,GAAG;gBAAE,QAAQ;YAAI;QACvE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}}]
}